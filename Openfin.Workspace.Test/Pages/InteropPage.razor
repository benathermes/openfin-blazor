@page "/interop"
@inject IJSRuntime JS

@using System.Text.Json

<div class="container my-3">
    <div class="d-flex flex-column">
        <div class="mx-auto">
            <input id="input-company-name" @bind="InputCompanyName" @bind:event="oninput" @onkeyup="Change" placeholder="Company name" />
        </div>
        <div class="mx-auto">
            <div style="font-size: 20vw">@CompanyName</div>
        </div>
    </div>
</div>

@code {
    public string CompanyName { get; set; }
    public string InputCompanyName { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            DotNetObjectReference<InteropPage> CallbackObject = DotNetObjectReference.Create(this);

            await JS.InvokeVoidAsync("blazorInterop.Interop.addContextHandler", CallbackObject, nameof(UpdateCallback));

            StateHasChanged();
        }
    }

    public async Task Change()
    {
        var payload = JsonSerializer.Serialize(
            new CompanyInteropPayload
            {
                Type = "organization",
                Id = new CompanyPayload { Name = InputCompanyName }
            }, new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase });


        await JS.InvokeVoidAsync("blazorInterop.Interop.setContext", payload);
    }

    [JSInvokable]
    public async Task UpdateCallback(JsonElement payload)
    {
        CompanyName = payload.GetProperty("id").GetProperty("name").GetString();
        StateHasChanged();
    }
}

